---
// import { CertStrapiRepo } from "@/lib/domain/cert/repo/strapi";
// import { EdStrapiRepo } from "@/lib/domain/ed/repo/strapi";
import { InterestStrapiRepo } from "@/lib/domain/interest/repo/strapi";
// import { LangStrapiRepo } from "@/lib/domain/lang/repo/strapi";
// import { ProjectStrapiRepo } from "@/lib/domain/project/repo/strapi";
// import { SkillStrapiRepo } from "@/lib/domain/skill/repo/strapi";
// import { VolunteerStrapiRepo } from "@/lib/domain/volunteer/repo/strapi";
// import { XpStrapiRepo } from "@/lib/domain/xp/repo/strapi";

import { InfoStrapiRepo } from "@/lib/domain/info/repo/strapi";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Typography } from "@/components/ui/Typography";
import { PrintablePage } from "@/components/ui/PrintablePage";

import { Locale } from "@/lib/types/Locale";

import "@/styles/globals.css";
import Profile from "@/components/sections/Profile.astro";
import { BulletList } from "@/components/ui/BulletList";
import { BulletListItem } from "@/components/ui/BulletListItem";

// const localizedCerts = await CertStrapiRepo.getAllLocalized();
// const localizedEds = await EdStrapiRepo.getAllLocalized();
// const localizedLangs = await LangStrapiRepo.getAllLocalized();
// const localizedSkills = await SkillStrapiRepo.getAllLocalized();
// const localizedProjects = await ProjectStrapiRepo.getAllLocalized();
// const localizedVolunteers = await VolunteerStrapiRepo.getAllLocalized();
// const localizedXps = await XpStrapiRepo.getAllLocalized();
const localizedInterests = await InterestStrapiRepo.getAllLocalized();

const localizedInfo = (await InfoStrapiRepo.getAllLocalized())[0];

const currentLocale: Locale = Object.values<string>(Locale)[0] as Locale;
---

<html lang={currentLocale}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>CV | Nico Ismaili</title>
  </head>
  <body class="mx-auto">
    <PrintablePage className="grid gap-3 grid-cols-[34%,auto]">
      <div class="flex flex-col gap-3">
        <Profile locale={currentLocale} localizedInfo={localizedInfo} />
        <Card>
          <CardHeader>
            <CardTitle>
              <Typography ele="h3">Interests</Typography>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <BulletList>
              {
                localizedInterests.map((interest) => (
                  <BulletListItem>
                    {interest[currentLocale]?.name}
                  </BulletListItem>
                ))
              }
            </BulletList>
          </CardContent>
        </Card>
      </div>

      <div >
        <Card>
          <CardHeader>
            <CardTitle>
              <Typography ele="h3">Experience</Typography>
            </CardTitle>
          </CardHeader>
          <CardContent />
        </Card>
      </div>
    </PrintablePage>

    <PrintablePage> tests </PrintablePage>

    <!-- Auto Theme Switcher Script -->
    <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </body>
</html>
