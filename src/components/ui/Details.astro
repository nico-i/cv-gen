---
import Svg from "@/components/ui/Svg.astro";
import TimePin from "@/components/ui/TimePin.astro";
import ChevronDown from "@/svg/chevron-down.svg?raw";

export interface Props {
  asTimeLine?: boolean;
  isCompleted?: boolean;
  startOpen?: boolean;
  hideChevron?: boolean;
}

const {
  asTimeLine = false,
  isCompleted = false,
  startOpen = false,
  hideChevron = false,
}: Props = Astro.props;
---

{
  Astro.slots.has("content") ? (
    <details
      open={startOpen}
      class:list={[
        "flex flex-col [&_span.open-indicator]:open:rotate-180",
        asTimeLine && "relative pl-6",
      ]}
    >
      <summary class:list={["flex flex-col cursor-pointer pb-3"]}>
        {asTimeLine && <TimePin isCompleted={isCompleted} />}
        <div class="flex justify-between items-center">
          <div class="flex flex-col">
            <slot name="title" />
            <slot name="subtitle" />
          </div>
          {!hideChevron && (
            <Svg
              svgHtml={ChevronDown}
              size="md"
              className="rotate-0 transition-transform duration-200 open-indicator"
            />
          )}
        </div>
      </summary>
      <div class="pb-6">
        <slot name="content" />
      </div>
    </details>
  ) : (
    <div
      class:list={[
        "flex flex-col [&_span.open-indicator]:open:rotate-180",
        asTimeLine && "relative pl-6",
      ]}
    >
      <div class="flex flex-col cursor-pointer pb-3">
        {asTimeLine && <TimePin isCompleted={isCompleted} />}
        <div class="flex flex-col">
          <slot name="title" />
          <slot name="subtitle" />
        </div>
      </div>
    </div>
  )
}
