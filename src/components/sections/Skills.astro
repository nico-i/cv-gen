---
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";

import { ExternalIconLink } from "@/components/ui/ExternalIconLink";
import { Gauge } from "@/components/ui/Gauge";
import { Svg } from "@/components/ui/Svg";
import { Typography } from "@/components/ui/Typography";
import type { Skill } from "@/lib/domain/skill";
import type { EntityByLocale } from "@/lib/types/EntityByLocale";
import type { Locale } from "@/lib/types/Locale";

interface Props {
  localizedSkills: EntityByLocale<Skill>[] | undefined;
  locale: Locale;
}

const { localizedSkills, locale }: Props = Astro.props;
---

<Card>
  <CardHeader>
    <CardTitle>
      <Typography ele="h3">Skills</Typography>
    </CardTitle>
    <CardDescription> My strengths and weaknesses. </CardDescription>
  </CardHeader>
  <CardContent>
    <div class="grid grid-cols-4 gap-3">
      {
        localizedSkills?.map((skill) => {
          const localizedSkill = skill[locale];
          if (!localizedSkill.svg) {
            return null;
          }
          return (
            <Gauge radius={21} strokeWidth={3} percentage={localizedSkill.proficiency}>
              <Svg
                className="block"
                size="lg"
                strapiSvg={localizedSkill.svg}
                client:load
              >
                <div class="flex items-center gap-1.5">
                  <span>
                    {`${localizedSkill.proficiency}%`} | {localizedSkill.name}
                  </span>
                  {localizedSkill.url && (
                    <ExternalIconLink href={localizedSkill.url} />
                  )}
                </div>
              </Svg>
            </Gauge>
          );
        })
      }
    </div>
  </CardContent>
</Card>
