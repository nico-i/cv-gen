---
import Card from "@/components/ui/Card.astro";
import Gauge from "@/components/ui/Gauge.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import Svg from "@/components/ui/Svg.astro";
import type { Skill } from "@/lib/domain/skill";
import { useTranslation } from "@/lib/i18n/utils";
import type { EntityByLocale } from "@/lib/types/EntityByLocale";
import type { Locale } from "@/lib/types/Locale";
import CPU from "@/svg/cpu.svg?raw";

interface Props {
  localizedSkills: EntityByLocale<Skill>[] | undefined;
  locale: Locale;
}

const { localizedSkills, locale }: Props = Astro.props;

const { t } = useTranslation(locale);
---

<Card>
  <Fragment slot="title">
    <SectionTitle title={t("skills")} svgHtml={CPU} />
  </Fragment>
  <Fragment slot="content">
    <div class="grid grid-cols-6 lg:grid-cols-4 gap-3">
      {
        localizedSkills?.map((skill) => {
          const localizedSkill = skill[locale];
          if (!localizedSkill.svgHtml) {
            return null;
          }
          return (
            <Gauge
              radius={21}
              strokeWidth={3}
              percentage={localizedSkill.proficiency}
            >
              <a
                href={localizedSkill.url}
                target="_blank"
                rel="noopener noreferrer"
                title={`${localizedSkill.proficiency}% | ${localizedSkill.name}`}
              >
                <Svg size="md" svgHtml={localizedSkill.svgHtml} />
              </a>
            </Gauge>
          );
        })
      }
    </div>
  </Fragment>
</Card>
