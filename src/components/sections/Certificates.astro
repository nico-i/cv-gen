---
import BulletList from "@/components/ui/BulletList.astro";
import Card from "@/components/ui/Card.astro";
import Details from "@/components/ui/Details.astro";
import ExternalIconLink from "@/components/ui/ExternalIconLink.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import Svg from "@/components/ui/Svg.astro";
import Typography from "@/components/ui/Typography.astro";
import { Cert } from "@/lib/domain/cert";
import { useTranslation } from "@/lib/i18n/utils";
import type { Locale } from "@/lib/types/Locale";
import Building from "@/svg/building.svg?raw";
import Calendar from "@/svg/calendar-days.svg?raw";
import ShieldCheck from "@/svg/shield-check.svg?raw";

interface Props {
  locale: Locale;
}

const { locale }: Props = Astro.props;

const res = await fetch(import.meta.env.STRAPI_URL, {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    Authorization: `bearer ${import.meta.env.STRAPI_API_TOKEN}`,
  },
  body: JSON.stringify({
    query: Cert.QUERY,
    variables: {
      locale,
    },
  }),
});

const { data } = await res.json();

const localizedCerts = await Cert.fromQuery(data);
console.log(localizedCerts);
const { t } = useTranslation(locale);
---

<Card>
  <Fragment slot="title">
    <SectionTitle title={t("certs")} svgHtml={ShieldCheck} />
  </Fragment>
  <Fragment slot="content">
    <ul class="flex flex-col">
      {
        localizedCerts?.map((cert) => {
          return (
            <Details>
              <Typography
                variant="large"
                className="inline-flex gap-1.5 items-center"
                slot="title"
              >
                {cert.title}
                {cert.docUrl && <ExternalIconLink href={cert.docUrl} />}
              </Typography>
              <div
                class="flex flex-col gap-0 lg:flex-row lg:gap-3"
                slot="subtitle"
              >
                <Typography variant="muted">
                  <Svg svgHtml={Building} />
                  {cert.issuer}
                </Typography>
                <Typography variant="muted">
                  <Svg svgHtml={Calendar} />

                  {cert.received.toLocaleDateString(locale, {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </Typography>
              </div>
              <BulletList slot="content">
                {cert.infoListItems.map((item) => (
                  <li set:html={item} />
                ))}
              </BulletList>
            </Details>
          );
        })
      }
    </ul>
  </Fragment>
</Card>
