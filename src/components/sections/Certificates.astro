---
import BulletList from "@/components/ui/BulletList.astro";
import Details from "@/components/ui/Details.astro";
import ExternalIconLink from "@/components/ui/ExternalIconLink.astro";
import IconText from "@/components/ui/IconText.astro";
import Svg from "@/components/ui/Svg.astro";
import Typography from "@/components/ui/Typography.astro";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import type { Cert } from "@/lib/domain/cert";
import type { EntityByLocale } from "@/lib/types/EntityByLocale";
import type { Locale } from "@/lib/types/Locale";
import { Building, Calendar, ShieldCheck } from "lucide-react";

interface Props {
  localizedCerts: EntityByLocale<Cert>[] | undefined;
  locale: Locale;
}

const { localizedCerts, locale }: Props = Astro.props;
---

<Card>
  <CardHeader>
    <CardTitle>
      <IconText variant="h3">
        <Svg Icon={ShieldCheck} />
        <span>Certificates</span>
      </IconText>
    </CardTitle>
  </CardHeader>
  <CardContent>
    <ul class="flex flex-col">
      {
        localizedCerts?.map((cert) => {
          const localizedCert = cert[locale];

          return (
            <Details>
              <Typography
                variant="large"
                className="inline-flex gap-1.5 items-center"
                slot="title"
              >
                {localizedCert.title}
                {localizedCert.docUrl && (
                  <ExternalIconLink href={localizedCert.docUrl} />
                )}
              </Typography>
              <div
                class="flex flex-col gap-0 lg:flex-row lg:gap-3"
                slot="subtitle"
              >
                <IconText variant="muted">
                  <Svg Icon={Building} />
                  <span>{localizedCert.issuer}</span>
                </IconText>
                <IconText variant="muted">
                  <Svg Icon={Calendar} />
                  <span>
                    {localizedCert.received.toLocaleDateString(locale, {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                  </span>
                </IconText>
              </div>
              <BulletList slot="content">
                {localizedCert.info.listItems.map((item) => (
                  <li>{item}</li>
                ))}
              </BulletList>
            </Details>
          );
        })
      }
    </ul>
  </CardContent>
</Card>
