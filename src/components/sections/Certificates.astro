---
import BulletList from "@/components/ui/BulletList.astro";
import Card from "@/components/ui/Card.astro";
import Details, {
  type Props as DetailsProps,
} from "@/components/ui/Details.astro";
import ExternalIconLink from "@/components/ui/ExternalIconLink.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import Svg from "@/components/ui/Svg.astro";
import Typography from "@/components/ui/Typography.astro";
import { Cert } from "@/lib/domain/cert";
import type { Locale } from "@/lib/types/Locale";
import { fetchCollectionQuery } from "@/lib/utils";
import Building from "@/svg/building.svg?raw";
import Calendar from "@/svg/calendar-days.svg?raw";
import ShieldCheck from "@/svg/shield-check.svg?raw";
import i18next, { t } from "i18next";

interface Props extends DetailsProps {}
const detailsProps: Props = Astro.props;
const locale = i18next.language as Locale;
const certs = await fetchCollectionQuery(Cert, locale);
---

<Card>
  <Fragment slot="title">
    <SectionTitle title={t("certs")} svgHtml={ShieldCheck} />
  </Fragment>
  <Fragment slot="content">
    {
      certs?.map((cert) => {
        return (
          <Details {...detailsProps}>
            <Typography
              variant="large"
              className="inline-flex gap-1.5 items-center"
              slot="title"
            >
              {cert.title}
              {cert.docUrl && (
                <ExternalIconLink
                  href={cert.docUrl}
                  label={`${t("document")}: ${cert.title}`}
                />
              )}
            </Typography>
            <div
              class="flex flex-col gap-0 lg:flex-row lg:gap-3"
              slot="subtitle"
            >
              <Typography variant="muted">
                <Svg svgHtml={Building} />
                {cert.issuer}
              </Typography>
              <Typography variant="muted">
                <Svg svgHtml={Calendar} />

                {cert.received.toLocaleDateString(locale, {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </Typography>
            </div>
            <BulletList slot="content">
              {cert.infoListItems.map((item) => (
                <li set:html={item} />
              ))}
            </BulletList>
          </Details>
        );
      })
    }
  </Fragment>
</Card>
