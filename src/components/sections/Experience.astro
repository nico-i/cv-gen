---
import BulletList from "@/components/ui/BulletList.astro";
import Details from "@/components/ui/Details.astro";
import ExternalIconLink from "@/components/ui/ExternalIconLink.astro";
import IconText from "@/components/ui/IconText.astro";
import Svg from "@/components/ui/Svg.astro";
import TimeWindow from "@/components/ui/TimeWindow.astro";
import Typography from "@/components/ui/Typography.astro";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import type { Xp } from "@/lib/domain/xp";
import type { EntityByLocale } from "@/lib/types/EntityByLocale";
import type { Locale } from "@/lib/types/Locale";
import { Building2, Telescope } from "lucide-react";

interface Props {
  localizedXps: EntityByLocale<Xp>[] | undefined;
  locale: Locale;
}

const { localizedXps, locale }: Props = Astro.props;
---

<Card>
  <CardHeader>
    <CardTitle>
      <IconText variant="h3">
        <Svg Icon={Telescope} />
        <span>Experience</span>
      </IconText>
    </CardTitle>
    <CardDescription> My professional journey </CardDescription>
  </CardHeader>
  <CardContent>
    {
      localizedXps &&
        localizedXps.map((xp) => {
          const currentLocaleXp = xp[locale];
          return (
            <Details
              isCompleted={currentLocaleXp?.end !== undefined}
              asTimeLine
            >
              <Typography variant="large" slot="title">
                {currentLocaleXp?.position}
              </Typography>
              <div slot="subtitle" class="flex flex-col lg:flex-row lg:gap-3">
                <IconText variant="muted">
                  <Svg Icon={Building2} />
                  <span>
                    {currentLocaleXp?.company}{" "}
                    {currentLocaleXp?.url && (
                      <ExternalIconLink href={currentLocaleXp?.url} />
                    )}
                  </span>
                </IconText>
                <TimeWindow
                  start={currentLocaleXp?.start!}
                  end={currentLocaleXp?.end}
                  locale={locale}
                />
              </div>
              <Fragment slot="content">
                {currentLocaleXp?.info?.listItems && (
                  <BulletList>
                    {currentLocaleXp?.info?.listItems.map((bullet) => (
                      <li>{bullet}</li>
                    ))}
                  </BulletList>
                )}
              </Fragment>
            </Details>
          );
        })
    }
  </CardContent>
</Card>
