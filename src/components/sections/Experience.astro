---
import BulletList from "@/components/ui/BulletList.astro";
import Card from "@/components/ui/Card.astro";
import Details from "@/components/ui/Details.astro";
import ExternalIconLink from "@/components/ui/ExternalIconLink.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import Svg from "@/components/ui/Svg.astro";
import TimeWindow from "@/components/ui/TimeWindow.astro";
import Typography from "@/components/ui/Typography.astro";
import type { Xp } from "@/lib/domain/xp";
import { useTranslation } from "@/lib/i18n/utils";
import type { EntityByLocale } from "@/lib/types/EntityByLocale";
import type { Locale } from "@/lib/types/Locale";
import Building2 from "@/svg/building-2.svg?raw";
import Telescope from "@/svg/telescope.svg?raw";

interface Props {
  localizedXps: EntityByLocale<Xp>[] | undefined;
  locale: Locale;
}

const { localizedXps, locale }: Props = Astro.props;

const { t } = useTranslation(locale);
---

<Card>
  <Fragment slot="title">
    <SectionTitle title={t("experience")} svgHtml={Telescope} />
  </Fragment>
  <Fragment slot="content">
    {
      localizedXps &&
        localizedXps.map((xp) => {
          const currentLocaleXp = xp[locale];
          return (
            <Details
              isCompleted={currentLocaleXp?.end !== undefined}
              asTimeLine
            >
              <Typography variant="large" slot="title">
                {currentLocaleXp?.position}
              </Typography>
              <div
                slot="subtitle"
                class="flex flex-col lg:flex-row lg:gap-3 gap-0.5"
              >
                <Typography variant="muted">
                  <Svg svgHtml={Building2} />
                  {currentLocaleXp?.company}
                  {currentLocaleXp?.url && (
                    <ExternalIconLink href={currentLocaleXp?.url} />
                  )}
                </Typography>
                <TimeWindow
                  start={currentLocaleXp?.start!}
                  end={currentLocaleXp?.end}
                  locale={locale}
                />
              </div>
              <Fragment slot="content">
                {currentLocaleXp?.info?.listItems && (
                  <BulletList>
                    {currentLocaleXp?.info?.listItems.map((bullet) => (
                      <li>{bullet}</li>
                    ))}
                  </BulletList>
                )}
              </Fragment>
            </Details>
          );
        })
    }
  </Fragment>
</Card>
