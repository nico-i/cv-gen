---
import BulletList from "@/components/ui/BulletList.astro";
import Card from "@/components/ui/Card.astro";
import IconText from "@/components/ui/IconText.astro";
import Link from "@/components/ui/Link.astro";
import Svg from "@/components/ui/Svg.astro";
import Typography from "@/components/ui/Typography.astro";
import { Info } from "@/lib/domain/info";
import type { EntityByLocale } from "@/lib/types/EntityByLocale";
import type { Locale } from "@/lib/types/Locale";
import Cake from "@/svg/cake.svg?raw";
import MapPin from "@/svg/map-pin.svg?raw";
import Phone from "@/svg/phone.svg?raw";

interface Props {
  localizedInfo: EntityByLocale<Info> | undefined;
  locale: Locale;
}

const { localizedInfo, locale } = Astro.props;
---

<Card contentClassName="flex flex-col gap-6">
  <Fragment slot="title">
    <img
      src={localizedInfo?.[locale]?.portrait.url}
      alt="Portrait Nico Ismaili"
      class="rounded-full mb-3 aspect-square w-40 mx-auto"
    />
    <Typography variant="h2">{localizedInfo?.[locale]?.name}</Typography>
  </Fragment>
  <Fragment slot="description">
    {localizedInfo?.[locale]?.occupation}
  </Fragment>
  <Fragment slot="content">
    <div id="info" class="flex flex-col gap-2">
      <IconText variant="small">
        <Svg svgHtml={Cake} />
        <span>
          {
            localizedInfo?.[locale]?.dob.toLocaleDateString(locale, {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </span>
      </IconText>
      <IconText variant="small">
        <Svg svgHtml={Phone} />
        <a href={`phone:${localizedInfo?.[locale]?.phone}`}>
          {localizedInfo?.[locale]?.phone}
        </a>
      </IconText>
      <IconText variant="small">
        <Svg svgHtml={MapPin} />
        <span>{localizedInfo?.[locale]?.address}</span>
      </IconText>
    </div>
    <BulletList hideBullets>
      {
        localizedInfo?.[locale]?.contacts?.map((contact) => {
          if (!contact.svgHtml) {
            return null;
          }

          return (
            <li class="flex gap-1.5">
              <Svg svgHtml={contact.svgHtml} />
              <Link href={contact.url}>{contact.text}</Link>
            </li>
          );
        })
      }
    </BulletList>
  </Fragment>
</Card>
