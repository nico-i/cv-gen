---
import { IconText } from "@/components/ui/IconText";
import { Link } from "@/components/ui/Link";
import { Svg } from "@/components/ui/Svg";
import { Typography } from "@/components/ui/Typography";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Cake, MapPin, Phone } from "lucide-react";

import { BulletList } from "@/components/ui/BulletList";
import { Info } from "@/lib/domain/info";
import type { EntityByLocale } from "@/lib/types/EntityByLocale";
import type { Locale } from "@/lib/types/Locale";
import type { ReactElement } from "react";

interface Props {
  localizedInfo: EntityByLocale<Info> | undefined;
  locale: Locale;
}

const { localizedInfo, locale } = Astro.props;
---

<Card>
  <CardHeader>
    <CardTitle>
      <img
        src={localizedInfo?.[locale]?.portrait.url}
        alt="Portrait Nico Ismaili"
        class="rounded-full mb-3 aspect-square w-40 mx-auto"
      />
      <Typography ele="h2">{localizedInfo?.[locale]?.name}</Typography>
    </CardTitle>
    <CardDescription>
      {localizedInfo?.[locale]?.occupation}
    </CardDescription>
  </CardHeader>
  <CardContent className="flex flex-col gap-6">
    <div id="info" class="flex flex-col gap-2">
      <IconText ele="small">
        <Svg Icon={Cake} />
        {
          localizedInfo?.[locale]?.dob.toLocaleDateString(locale, {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </IconText>
      <IconText ele="small">
        <Svg Icon={Phone} />
        <a href={`phone:${localizedInfo?.[locale]?.phone}`}>
          {localizedInfo?.[locale]?.phone}
        </a>
      </IconText>
      <IconText ele="small">
        <Svg Icon={MapPin} />
        {localizedInfo?.[locale]?.address}
      </IconText>
    </div>
    <BulletList hideBullets id="contact">
      {
        localizedInfo?.[locale]?.contacts?.map((contact) => (
          <li>
            <Link href={contact.url} className="flex gap-2 items-center">
              {contact.icon && (
                <Svg strapiSvg={contact.icon} className="mt-1" />
              )}
              {contact.text}
            </Link>
          </li>
        )) as ReactElement[]
      }
    </BulletList>
  </CardContent>
</Card>
