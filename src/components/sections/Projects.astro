---
import BulletList from "@/components/ui/BulletList.astro";
import Card from "@/components/ui/Card.astro";
import Details from "@/components/ui/Details.astro";
import ExternalIconLink from "@/components/ui/ExternalIconLink.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import TimeWindow from "@/components/ui/TimeWindow.astro";
import Typography from "@/components/ui/Typography.astro";
import { Project } from "@/lib/domain/project";
import { useTranslation } from "@/lib/i18n/utils";
import type { Locale } from "@/lib/types/Locale";
import { fetchCollectionQuery } from "@/lib/utils";
import PencilRuler from "@/svg/pencil-ruler.svg?raw";

interface Props {
  locale: Locale;
}

const { locale }: Props = Astro.props;
const projects = await fetchCollectionQuery(Project, locale);
const { t } = useTranslation(locale);
---

<Card>
  <Fragment slot="title">
    <SectionTitle title={t("projects")} svgHtml={PencilRuler} />
  </Fragment>
  <Fragment slot="content">
    {
      projects.map((project) => {
        return (
          <Details isCompleted={project?.end !== undefined} asTimeLine>
            <Typography variant="large" slot="title">
              {project?.title}
              &thinsp;
              {project?.demoUrl && <ExternalIconLink href={project?.demoUrl} />}
            </Typography>
            <div slot="subtitle" class="flex flex-col lg:flex-row lg:gap-3">
              <TimeWindow
                start={project?.start!}
                end={project?.end}
                locale={locale}
              />
            </div>
            {project?.summaryListItems ? (
              <Fragment slot="content">
                <BulletList>
                  {project?.summaryListItems?.map((bullet) => (
                    <li set:html={bullet} />
                  ))}
                </BulletList>
              </Fragment>
            ) : (
              project.tldr
            )}
          </Details>
        );
      })
    }
  </Fragment>
</Card>
