---
import Card from "@/components/ui/Card.astro";
import ExternalIconLink from "@/components/ui/ExternalIconLink.astro";
import GradedListItem from "@/components/ui/GradedListItem.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import Svg from "@/components/ui/Svg.astro";
import TimeWindow from "@/components/ui/TimeWindow.astro";
import Typography from "@/components/ui/Typography.astro";
import { Ed } from "@/lib/domain/ed";
import type { Locale } from "@/lib/types/Locale";
import { fetchCollectionQuery } from "@/lib/utils";
import GraduationCap from "@/svg/graduation-cap.svg?raw";
import University from "@/svg/university.svg?raw";
import i18next, { t } from "i18next";

const locale = i18next.language as Locale;
const eds = await fetchCollectionQuery(Ed, locale);
---

<Card>
  <Fragment slot="title">
    <SectionTitle title={t("education")} svgHtml={GraduationCap} />
  </Fragment>
  <Fragment slot="content">
    <ul class="flex flex-col gap-5">
      {
        eds?.map((ed) => {
          return (
            <GradedListItem grade={ed?.grade} docUrl={ed?.docUrl}>
              <span slot="title">
                {ed?.institute}&hairsp;
                {ed?.url && (
                  <ExternalIconLink
                    href={ed?.url}
                    label={`${t("document")}: ${ed.degree}`}
                  />
                )}
              </span>
              <div class="flex flex-col gap-0.5" slot="subtitle">
                <Typography variant="muted">
                  <Svg svgHtml={University} />
                  {ed?.degree}
                </Typography>
                <TimeWindow start={ed?.start} end={ed?.end} />
              </div>
            </GradedListItem>
          );
        })
      }
    </ul>
  </Fragment>
</Card>
