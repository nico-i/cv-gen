---
import Card from "@/components/ui/Card.astro";
import Details, {
  type Props as DetailsProps,
} from "@/components/ui/Details.astro";
import ExternalIconLink from "@/components/ui/ExternalIconLink.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import Svg from "@/components/ui/Svg.astro";
import TimeWindow from "@/components/ui/TimeWindow.astro";
import Typography from "@/components/ui/Typography.astro";
import { Volunteer } from "@/lib/domain/volunteer";
import type { Locale } from "@/lib/types/Locale";
import { fetchCollectionQuery } from "@/lib/utils";
import Building2 from "@/svg/building-2.svg?raw";
import HeartHandshake from "@/svg/heart-handshake.svg?raw";
import i18next, { t } from "i18next";

interface Props extends DetailsProps {}
const detailsProps: Props = Astro.props;

const locale = i18next.language as Locale;
const volunteers = await fetchCollectionQuery(Volunteer, locale);
---

<Card>
  <Fragment slot="title">
    <SectionTitle title={t("volunteerWork")} svgHtml={HeartHandshake} />
  </Fragment>
  <Fragment slot="content">
    {
      volunteers.map((volunteer) => {
        return (
          <Details
            {...detailsProps}
            isCompleted={volunteer?.end !== undefined}
            asTimeLine
          >
            <Typography variant="large" slot="title">
              {volunteer?.activity}&thinsp;
              {volunteer?.url && (
                <ExternalIconLink
                  href={volunteer?.url}
                  label={`${t("document")}: ${volunteer.activity}`}
                />
              )}
            </Typography>
            <div slot="subtitle" class="flex flex-col gap-0.5">
              <Typography variant="muted">
                <Svg svgHtml={Building2} />
                {volunteer?.org}
              </Typography>
              <TimeWindow start={volunteer?.start!} end={volunteer?.end} />
            </div>
            {volunteer?.summary && (
              <Fragment slot="content">{volunteer?.summary}</Fragment>
            )}
          </Details>
        );
      })
    }
  </Fragment>
</Card>
